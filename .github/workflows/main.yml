name: Generate PDF report

on:
  workflow_call:
    inputs:
      generator-path:
        required: true
        type: string
      output-path:
        required: true
        type: string
      time:
        required: false
        type: string

  workflow_dispatch:
    inputs:
      generator-path:
        required: true
        type: string
        default: "cyfrin-report/report-generator-template"
      output-path:
        required: true
        type: string
        default: "./"
      time:
        required: false
        type: string

permissions: read-all

jobs:
  generate-report:
    runs-on: ubuntu-latest
    steps:
      - name: Initial greeting
        run: echo "Report generation started, triggered by a ${{ github.event_name }} event."

      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: |
          cd $GITHUB_WORKSPACE
          cd ${{ inputs.generator-path }}
          pip install -r requirements.txt

      - name: Install pandoc
        run: sudo apt-get install pandoc

      - name: Generate the report
        run: |
          cd $GITHUB_WORKSPACE
          cd ${{ inputs.generator-path }}
          chmod a+x ./scripts/*
          GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} python3 generate_report.py

      - name: Compile the LaTeX file
        continue-on-error: true
        uses: dante-ev/latex-action@latest
        with:
          working_directory: ./${{ inputs.generator-path }}/working
          root_file: main.tex
          compiler: pdflatex
          args: -interaction=nonstopmode -shell-escape

      - name: Compile the LaTeX file (again, for references)
        continue-on-error: true
        uses: dante-ev/latex-action@latest
        with:
          working_directory: ./${{ inputs.generator-path }}/working
          root_file: main.tex
          compiler: pdflatex
          args: -interaction=nonstopmode -shell-escape

      - name: Get the current date
        id: date
        run: echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Get the filename
        id: report_name
        run: |
          if [ -z "${{ inputs.time }}" ]; then
            REPORT_NAME="${{ env.DATE }}-cyfrin-protocol-v0.0"
          else
            REPORT_NAME="${{ inputs.time }}-cyfrin-protocol-v0.0"
          fi
          echo "REPORT_NAME=${REPORT_NAME}" >> $GITHUB_ENV

      - name: Rename the artifacts
        run: |
          cd $GITHUB_WORKSPACE
          cd ${{ inputs.generator-path }}/working
          mv main.pdf ${{ env.REPORT_NAME }}.pdf
          cd $GITHUB_WORKSPACE/${{ inputs.generator-path }}/output
          mv solodit_report.md ${{ env.REPORT_NAME }}.md
          mv mitigation_table.csv ${{ env.REPORT_NAME }}.csv

      - name: Upload the report markdown
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.REPORT_NAME }}.md
          path: ./${{ inputs.generator-path }}/output/${{ env.REPORT_NAME }}.md

      - name: Upload the report mitigation table
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.REPORT_NAME }}.csv
          path: ./${{ inputs.generator-path }}/output/${{ env.REPORT_NAME }}.csv

      - name: Upload the report PDF
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.REPORT_NAME }}.pdf
          path: ./${{ inputs.generator-path }}/working/${{ env.REPORT_NAME }}.pdf

      - name: Final greeting, job status
        run: echo "Job finished. Status ${{ job.status }}."
